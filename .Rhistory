trControl = tr_control,
tuneGrid = base::expand.grid(
list(
n.trees = c(4,5),
interaction.depth=c(2,4),
shrinkage=0.1,
n.minobsinnode=5)
)
)
holdout_result$results
list(
n.trees = c(4,5),
interaction.depth=c(2,4),
shrinkage=0.1,
n.minobsinnode=5)
)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
horizon = 5, skip = 0, fixedWindow = FALSE,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge$results
holdout_result$results
holdout_result$bestTune
holdout_result$metric
holdout_result$control
holdout_result$levels
holdout_result$times
holdout_result$perfNames
holdout_result$resample
holdout_result$trainingData
holdout_result$dots
holdout_result$maximize
list(alpha = 0, lambda = lambdas)
expand.grid(list(alpha = 0, lambda = lambdas) )
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
horizon = 20, skip = 0, fixedWindow = FALSE,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("cv", number = 2),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("cv", number = 5),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge
cv <- cv.glmnet(x = as.matrix(filter_train %>% select(-ytarget) ),
y = filter_train[,ytarget], alpha = 0, lambda = lambdas, parallel = TRUE,
type.measure = 'mse', nfolds = 3)
cv
cv$lambda
cv$cvm
cv$cvm
which.min(cv$cvm)
cv$lambda.min
trainControl("cv", number = 3)
list(alpha = 0, lambda = lambdas)
expand.grid(list(alpha = 0, lambda = lambdas) )
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("cv", number = 3),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge
ridge$results
ridge
ridge$method
ridge$modelInfo
ridge$modelType
ridge$bestTune
ridge$call
ridge$control
ridge$finalModel
ridge$levels
ridge$resample
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget], method = "glmnet",
trControl = trainControl("cv", number = 10),
tuneGrid = expand.grid(alpha = 0, lambda = lambda)
)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget], method = "glmnet",
trControl = trainControl("cv", number = 10),
tuneGrid = expand.grid(alpha = 0, lambda = lambdas)
)
ridge
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("cv", number = 10),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
ridge$results
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("cv", number = 10),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) )
)
ridge$results
as.matrix(r_filter_train %>% select(-ytarget) )
r_filter_train[,ytarget]
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) )
)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) )
)
ridge$results
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 0) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = lambdas) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 0) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 0.01) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) )
)
View(ridge$results)
ridge <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE, timingSamps = 1),
tuneGrid = expand.grid(list(alpha = c(0.01,0.001), lambda = lambdas) )
)
View(ridge$results)
c(seq(0.001, 1, 0.01), seq(1,400, 5) )
length(lambdas)
ts_trControl <- trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE)
ts_trControl <- trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE)
length(lambdas)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.01), seq(1,300, 4) )
length(lambdas)
seq(0.001, 1, 0.01)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.02), seq(1,300, 4) )
length(lambdas)
c(seq(0.001, 1, 0.02), seq(1,300, 4) )
ts_trControl <- trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20,
verboseIter=TRUE)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
preProcess = c("center", "scale"),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = lambdas) ),
tuneLength = 5
)
ridge
View(ridge$results)
ts_trControl <- trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20)
expand.grid(list(alpha = lambdas, lambda = lambdas) )
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
preProcess = c("center", "scale"),
tuneGrid = expand.grid(list(alpha = lambdas, lambda = lambdas) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
preProcess = c("center", "scale"),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
preProcess = c("center", "scale"),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
ts_trControl <- trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20, timingSamps = 1)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
preProcess = c("center", "scale"),
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.02), seq(1,300, 4) )
ts_trControl <- trainControl("timeslice", number= 2,
initialWindow = nrow(filter_train)-20,
skip = 0, fixedWindow = FALSE, horizon = 20, timingSamps = 1)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = lambdas) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
View(ridge$results)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.01), seq(1,300, 4) )
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) ),
)
View(ridge$results)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.01), seq(1,400, 5) )
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = 0, lambda = lambdas) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) ),
)
View(ridge$results)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.01), seq(1,400, 1) )
length(lambdas)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) ),
)
View(ridge$results)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.01), seq(1,300, 6) )
length(lambdas)
#5+"k"
lambdas <- c(seq(0.001, 1, 0.02), seq(1,300, 6) )
length(lambdas)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 1) ),
tuneLength = 10
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = lambdas, lambda = 0) ),
tuneLength = 10
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = 1, lambda = lambdas) ),
tuneLength = 10
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = c(1), lambda = lambdas) ),
tuneLength = 10
)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = c(1), lambda = lambdas) ),
tuneLength = 10
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = c(0.1, 0.2), lambda = lambdas) ),
tuneLength = 10
)
View(ridge$results)
elastic_net_reg <- train(
x = as.matrix(r_filter_train %>% select(-ytarget) ),
y = r_filter_train[,ytarget],
method = "glmnet",
trControl = ts_trControl,
tuneGrid = expand.grid(list(alpha = c(0.1, 0.2), lambda = lambdas) ),
)
View(ridge$results)
