P1 <- diag(3)[,1]
P1
P1 <- diag(3)[,1].T
P1 <- t(diag(3)[,1])
P1
dim(P1)
# 19
A <- matrix(c( 0.8, 0.3,0.2 ,0.7), nrow = 2)
P <- matrix( c(0 ,1,1, 0), nrow = 2)
svd(A)
svd(A)$u%*%svd(A)$d
library(glmnet)
? glmnet
library(glmnet)
set.seed(1234)
N<-1000
beta ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta true + e
ols_reg <- 1m(y - x + 0)
ridge_reg <- glmnet (x, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
set.seed(1234)
N<-1000
beta ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta true + e
ols_reg <- lm(y - x + 0)
ridge_reg <- glmnet (x, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta true + e
ols_reg <- lm(y - x + 0)
ridge_reg <- glmnet (x, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta_true + e
ols_reg <- lm(y - x + 0)
ridge_reg <- glmnet (x, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta_true + e
ols_reg <- lm(y - X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- x%*%beta_true + e
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
N<-1000
beta ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
X
e
y
X
X.sigma
ols_reg
lm(y ~ X + 0)
lm(y ~ X)
ridge_reg
beta_OLS
beta_ridge
beta_true
mean_OLS
mean_ridge
beta_ridge
mean_OLS
beta_true
beta_OLS
beta_ridge
beta_OLS
dim(beta_OLS)
mean_OLS
for (i in 1:2) {
mean_OLS[i,1] <- mean(beta_OLS[i,])
mean_ridge[i,1] <- mean(beta_OLS[i,])
}
mean_OLS
mean_ridge
beta_ridge
dim(beta_ridge)
mean_OLS_single <- mean(beta_OLS)
mean_ridge_single <- mean(beta_ridge)
mean_OLS_single
mean_ridge_single
bias_OLS single <- mean(beta_true) - mean_OLS_single
bias_OLS_single <- mean(beta_true) - mean_OLS_single
mean_OLS_single <- mean(beta_OLS)
mean_ridge_single <- mean(beta_ridge)
bias_OLS <- beta_true - mean_OLS
bias_OLS_single <- mean(beta_true) - mean_OLS_single
bias_ridge <- beta_true - mean_ridge
bias ridge_single <- mean(beta_true)- mean_ridge_single
mean_OLS_single <- mean(beta_OLS)
mean_ridge_single <- mean(beta_ridge)
bias_OLS <- beta_true - mean_OLS
bias_OLS_single <- mean(beta_true) - mean_OLS_single
bias_ridge <- beta_true - mean_ridge
bias_ridge_single <- mean(beta_true)- mean_ridge_single
bias_ridge_single
library(glmnet)
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
X
beta_ridge
matrix(ridge_reg$beta, nrow = 2)
View(beta_ridge)
library(glmnet)
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
matrix(ridge_reg$beta, nrow = 2)
dim(beta_ridge)
beta_ridge
beta_ridge[,c(1,2)]
beta_ridge[,c(500)]
beta_ridge[,c(50)]
beta_ridge[,c(50,55)]
beta_ridge[,c(500)]
beta_ridge[,c(500)]
beta_ridge[,c(600)]
beta_ridge[,c(550)]
beta_ridge[,c(540)]
beta_ridge[,c(530)]
beta_ridge[,c(520)]
beta_ridge[,c(510)]
beta_ridge[,c(500)]
beta_OLS
beta_ridge
beta_ridge[1,]
for (i in 1:2) {
mean_OLS[i,1] <- mean(beta_OLS[i,])
mean_ridge[i,1] <- mean(beta_ridge[i,])
}
mean_OLS
?mean
for (i in 1:2) {
mean_OLS[i,1] <- mean(beta_OLS[i,], na.rm =TRUE)
mean_ridge[i,1] <- mean(beta_ridge[i,], na.rm =TRUE)
}
mean_OLS
beta_OLS
dim(beta_OLS)
mean(beta_OLS)
mean(beta_OLS, na.rm =TRUE)
mean_OLS
mean_OLS_single <- mean(beta_OLS, na.rm =TRUE)
mean_ridge_single <- mean(beta_ridge, na.rm =TRUE)
beta_true
beta_true - mean_OLS
bias_OLS <- beta_true - mean_OLS
bias_OLS
mean_OLS_single <- mean(beta_OLS, na.rm =TRUE)
mean_ridge_single <- mean(beta_ridge, na.rm =TRUE)
bias_OLS
mean(beta_true)
bias_OLS_single <- mean(beta_true) - mean_OLS_single
bias_OLS_single
bias_ridge <- beta_true - mean_ridge
beta_true - mean_ridge
beta_true - mean_OLS
bias_ridge_single <- mean(beta_true)- mean_ridge_single
bias_ridge_single
print(bias_OLS_single,bias_ridge_single )
print(c(bias_OLS_single,bias_ridge_single ) )
library(glmnet)
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = FALSE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
for (i in 1:2) {
mean_OLS[i,1] <- mean(beta_OLS[i,], na.rm =TRUE)
mean_ridge[i,1] <- mean(beta_ridge[i,], na.rm =TRUE)
}
mean_OLS_single <- mean(beta_OLS, na.rm =TRUE)
mean_ridge_single <- mean(beta_ridge, na.rm =TRUE)
bias_OLS <- beta_true - mean_OLS
bias_OLS_single <- mean(beta_true) - mean_OLS_single
bias_ridge <- beta_true - mean_ridge
bias_ridge_single <- mean(beta_true)- mean_ridge_single
print(c(bias_OLS_single,bias_ridge_single ) )
library(glmnet)
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
for (i in 1:2) {
mean_OLS[i,1] <- mean(beta_OLS[i,], na.rm =TRUE)
mean_ridge[i,1] <- mean(beta_ridge[i,], na.rm =TRUE)
}
mean_OLS_single <- mean(beta_OLS, na.rm =TRUE)
mean_ridge_single <- mean(beta_ridge, na.rm =TRUE)
bias_OLS <- beta_true - mean_OLS
bias_OLS_single <- mean(beta_true) - mean_OLS_single
bias_ridge <- beta_true - mean_ridge
bias_ridge_single <- mean(beta_true)- mean_ridge_single
print(c(bias_OLS_single,bias_ridge_single ) )
bias_ridge
bias_OLS
library(MASS)
?lm.ridge
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X, y, lambda = 1, intercept = FALSE, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X, y, lambda = 1, intercept = FALSE, standardize = TRUE)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X, y, lambda = 1, intercept = FALSE)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X, y, lambda = 1)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X ~ y+0, lambda = 1, intercept = FALSE, standardize = TRUE)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X ~ y+0, lambda = 1, standardize = TRUE)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(X ~ y, lambda = 1, standardize = TRUE)
lm.ridge(X ~ y)
X
y
lm.ridge(X ~ y)
X
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(y~X+0, lambda = 1, standardize = TRUE)
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(y~X+0, lambda = 1, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
}
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(y~X+0, lambda = 1, standardize = TRUE)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(y~X+0, lambda = 1, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
print(i)
}
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(y~X+0, lambda = 1, standardize = TRUE)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
ridge_reg
beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
ridge_reg
ridge_reg$beta
ridge_reg
ridge_reg$coef
set.seed(1234)
N<-1000
beta_ridge <- matrix(nrow = 2, ncol = N) # 'empty shelf' to be filled with estimates throughout the loop
beta_OLS <- matrix (nrow = 2, ncol = N)#'empty shelf'
sigma2_ridge <- numeric(N)
sigma2_OLS <- numeric (N)
beta_true <- matrix(c(1,0), nrow = 2)
mean_OLS <- matrix(nrow = 2, ncol = 1)
mean_ridge <- matrix(nrow = 2, ncol = 1)
MSE_OLS <- matrix(nrow = 2, ncol = 1)
X.sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
#*##**First simulation, Questions 2.2(a) and 2.2(b)
for (i in 1:N) {
X <- MASS::mvrnorm(n = 5, c(0,0), X.sigma)
e <- rnorm(n = 5, mean = 0, sd = 1)
y <- X%*%beta_true + e
ols_reg <- lm(y ~ X + 0)
# ridge_reg <- glmnet (X, y, lambda = 1, alpha= 0, intercept = FALSE, standardize = TRUE)
ridge_reg <- lm.ridge(y~X+0, lambda = 1, standardize = TRUE)
beta_OLS[i] <- matrix(ols_reg$coefficients, nrow = 2)
#beta_ridge[i]<- matrix(ridge_reg$beta, nrow = 2)
beta_ridge[i]<- matrix(ridge_reg$coef, nrow = 2)
print(i)
}
for (i in 1:2) {
mean_OLS[i,1] <- mean(beta_OLS[i,], na.rm =TRUE)
mean_ridge[i,1] <- mean(beta_ridge[i,], na.rm =TRUE)
}
mean_OLS_single <- mean(beta_OLS, na.rm =TRUE)
mean_ridge_single <- mean(beta_ridge, na.rm =TRUE)
bias_OLS <- beta_true - mean_OLS
bias_OLS_single <- mean(beta_true) - mean_OLS_single
bias_ridge <- beta_true - mean_ridge
bias_ridge_single <- mean(beta_true)- mean_ridge_single
print(c(bias_OLS_single,bias_ridge_single ) )
bias_ridge
c(1:14, 21, 28)
c(1:14, 21, 28)
c(1:14, 21, 28)
c(1:14, 21, 28)
# run model estimation
S <- 24
S * c(1:14, 21, 28)
24*10
24*12
24*16
24*10
S * c(1:14, 21, 28)
24*12
24*13
24*14
S * c(1:14, 21, 28)
24*14
S * c(1:14, 21, 24, 28, 32, 35 ) # S * c(1:14, 21, 28)
source("~/Desktop/files_desktop/forecasting_energy_market/code/pred_code_wo_bugs.R", echo=TRUE)
